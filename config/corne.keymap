/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  behaviors {
    am: alpha_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "ALPHA_MT";
        #binding-cells = <2>;
        tapping-term-ms = <250>;
        quick-tap-ms = <150>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    skq: sticky_key_quick_release {
      compatible = "zmk,behavior-sticky-key";
      label = "STICKY_KEY_QUICK_RELEASE";
      #binding-cells = <1>;
      bindings = <&kp>;
      release-after-ms = <1000>;
      quick-release;
    };
  };

  keymap {
    compatible = "zmk,keymap";
    layer0 {
      bindings = <
      &kp TAB             &kp Q &kp W &kp E               &kp R          &kp T                  &kp Y     &kp U &kp I     &kp O                &kp P                      &kp BKSP
      &mt LEFT_GUI ESCAPE &kp A &kp S &am LEFT_CONTROL D  &am LEFT_GUI F &kp G                  &kp H     &am RIGHT_GUI J &am RIGHT_CONTROL K  &kp L     &mt LEFT_CONTROL SEMICOLON &kp SINGLE_QUOTE
      &kp LEFT_SHIFT      &kp Z &kp X &kp C               &kp V          &kp B                  &kp N     &kp M &kp COMMA &kp DOT              &kp SLASH                  &kp RIGHT_SHIFT
                                      &mo 1               &mo 2          &skq LSHIFT            &kp ENTER &kp SPACE &to 1
      >;
    };layer1 {
      bindings = <
      &kp TAB             &kp N1    &kp N2    &kp N3  &kp N4  &kp N5  &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BACKSPACE
      &kp LEFT_CONTROL    &kp F20   &kp F20   &kp F20 &kp F20 &kp F20 &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
      &kp LEFT_SHIFT      &kp F20   &kp F20   &kp F20 &kp F20 &kp F20 &kp F20  &kp F20  &trans &trans    &trans &kp F20
      &kp LEFT_GUI &trans &kp SPACE &kp ENTER &mo 3   &to 0
      >;
    };layer2 {
      bindings = <
      &kp TAB          &kp EXCL           &kp AT             &kp HASH           &kp DLLR          &kp PRCNT         &kp CARET &kp AMPS      &kp ASTRK        &kp LPAR          &kp RPAR      &kp BACKSPACE
      &kp LEFT_CONTROL &kp LC(LS(LA(A)))  &kp LC(LS(LA(S)))  &kp LC(LS(LA(D)))  &kp LC(LS(LA(F))) &kp LC(LS(LA(G))) &kp MINUS &kp EQUAL     &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp BACKSLASH &kp GRAVE
      &kp LEFT_SHIFT   &kp LC(LS(LA(Z)))  &kp LC(LS(LA(X)))  &kp LC(LS(LA(C)))  &kp LC(LS(LA(V))) &kp LC(LS(LA(B))) &kp UNDER &kp PLUS      &kp LBRC         &kp RBRC          &kp PIPE      &kp TILDE
                                          &kp LEFT_GUI       &mo 3              &kp SPACE         &kp ENTER         &trans    &kp RIGHT_ALT
      >;
    };
  };
};
